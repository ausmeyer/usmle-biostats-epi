source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
(110+156*2)
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
df.b.s
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
warnings()
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
df.a
df.a$ei
df.a[675]
df.a[675,]
df.a[671,]
df.a[670,]
df.a[669,]
df.a[668,]
df.a[669,]
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
source('~/Desktop/gene_dup.R')
a <- read.table('kept_mutants.dat', head=T, stringsAsFactors = F)
a <- read.table('kept_mutants.dat', head=T, stringsAsFactors = F)
a <- read.table('kept_mutants.dat', head=T, stringsAsFactors = F)
a <- read.table('kept_mutants.dat', head=T, stringsAsFactors = F)
a.0 <- a[a$selected_chain == 0, ]
a.1 <- a[a$selected_chain == 1, ]
b <- data.frame(mutations = c(a.0$count, a.1$count), )
b <- data.frame(mutations = c(a.0$count, a.1$count), stability.selected = c(a.0$stability2_a, a.1$stability2_b), stability.unselected = c(a.0$stability2_b, a.1$stability2_a), binding.selected = c(a.0$binding_a, a.1$binding_b), binding.unselected = c(a.0$binding_b, a.1$binding_a))
b <- data.frame(mutations = c(a.0$count, a.1$count), stability.selected = c(a.0$stability2_a, a.1$stability2_b), stability.unselected = c(a.0$stability2_b, a.1$stability2_a), binding.selected = c(a.0$binding_a, a.1$binding_b), binding.unselected = c(a.0$binding_b, a.1$binding_a), stringsAsFactors = F)
b
library(ggplot2)
library(grid)
library(cowplot)
p.binding.s <- ggplot(b, aes(x=mutations, y=binding.selected)) + geom_smooth(se=F) + geom_point(alpha=0.5)
show(p.binding.s)
p.binding.s <- ggplot(b, aes(x=mutations, y=binding.selected)) + geom_smooth() + geom_point(alpha=0.5)
show(p.binding.s)
p.binding.s <- ggplot(b, aes(x=mutations, y=binding.selected)) + geom_smooth(se=F, method = lm) + geom_point(alpha=0.5)
show(p.binding.s)
p.binding.s <- ggplot(b, aes(x=mutations, y=binding.selected)) + geom_smooth(se=F, method = "loess") + geom_point(alpha=0.5)
show(p.binding.s)
p.binding.s <- ggplot(b, aes(x=mutations, y=binding.selected)) + geom_smooth(se=F, method = "loess") + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-25, 5))
show(p.binding.s)
p.binding.s <- ggplot(b, aes(x=mutations, y=binding.selected)) + stat_smooth(se=F, method = "lm", formula = y ~ poly(x, 2)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-25, 5))
show(p.binding.s)
p.binding.u <- ggplot(b, aes(x=mutations, y=binding.unselected)) + stat_smooth(se=F, method = "lm", formula = y ~ poly(x, 2)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-25, 5))
show(p.binding.s)
show(p.binding.u)
p.binding.u <- ggplot(b, aes(x=mutations, y=binding.unselected)) + stat_smooth(se=F, method = "lm", formula = y ~ poly(x, 3)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-25, 5))
show(p.binding.u)
p.binding.u <- ggplot(b, aes(x=mutations, y=binding.unselected)) + stat_smooth(se=F, method = "loess") + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-25, 5))
show(p.binding.u)
p.binding.u <- ggplot(b, aes(x=mutations, y=binding.unselected)) + stat_smooth(se=F, method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-25, 5))
show(p.binding.u)
p.binding.u <- ggplot(b, aes(x=mutations, y=binding.unselected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-25, 5))
show(p.binding.u)
p.stability.u <- ggplot(b, aes(x=mutations, y=stability.unselected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-25, 5))
show(p.stability.u)
head(b)
p.stability.u <- ggplot(b, aes(x=mutations, y=stability.unselected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-100, 100))
head(b)
show(p.stability.u)
p.stability.s <- ggplot(b, aes(x=mutations, y=stability.selected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(-100, 100))
show(p.stability.s)
p.stability.s <- ggplot(b, aes(x=mutations, y=stability.selected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(20, 50))
show(p.stability.s)
p.stability.s <- ggplot(b, aes(x=mutations, y=stability.selected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(25, 35))
show(p.stability.s)
p.stability.u <- ggplot(b, aes(x=mutations, y=stability.unselected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(25, 35))
show(p.stability.s)
show(p.stability.u)
p.stability.u <- ggplot(b, aes(x=mutations, y=stability.unselected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(15, 45))
show(p.stability.u)
p.stability.u <- ggplot(b, aes(x=mutations, y=stability.unselected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(25, 40))
show(p.stability.u)
p.stability.u <- ggplot(b, aes(x=mutations, y=stability.unselected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(20, 40))
show(p.stability.u)
p.stability.s <- ggplot(b, aes(x=mutations, y=stability.selected)) + stat_smooth(method = "lm", formula = y ~ poly(x, 1)) + geom_point(alpha=0.5) + scale_y_continuous(limits=c(20, 40))
show(p.stability.s)
source('~/Google Drive/Data/influenza_pH1N1_timecourse/NA/dNdS/distances/calc_correlations.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
install.packages('dplyr')
source('~/Desktop/plot_host_trop.R')
by.chain <- group_by(df, chain.id)
by.chain
summarise(by.chain)
by.chain
df %>% group_by(chain.id, time)
df %>% group_by(chain.id, time) %>% summarise()
df %>% group_by(chain.id, time) %>% summarise(ttest = t.test(binding))
df %>% group_by(chain.id, time) %>% do(ttest = t.test(binding))
df %>% group_by(chain.id, time) %>% do(ttest = t.test(.binding))
df %>% group_by(chain.id, time) %>% do(ttest = t.test(.$binding))
df %>% group_by(chain.id, time) %>% do(ttest = t.test(.$binding)$p.value)
df %>% group_by(chain.id, time) %>% do(ttest = t.test(.$binding)$p)
t.test(c(1,2,3,4,5), c(3,4,5,5,6))
t.test(c(1,2,3,4,5), c(3,4,5,5,6))$p.value
df %>% group_by(chain.id, time) %>% do(ttest = t.test(.$binding)$p.value)
df %>% group_by(chain.id, time) %>% summarise(ttest = t.test(binding)$p.value)
tests = df %>% group_by(chain.id, time) %>% summarise(ttest = t.test(binding)$p.value)
test
tests
tests$ttest
tests = df %>% group_by(chain.id) %>% group_by(time) %>% summarise(ttest = t.test(binding)$p.value)
tests$ttest
t.test(c(1,2,3,4,5), c(3,4,5,5,6))$p.value
t.test(c(1,2,3,4,5), c(3,4,5,5,6))$diff
t.test(c(1,2,3,4,5), c(3,4,5,5,6))$difference
at.test(c(1,2,3,4,5), c(3,4,5,5,6))
a<-t.test(c(1,2,3,4,5), c(3,4,5,5,6))
a$statistic
a$estimate
a$parameter
a$estimate
a$statistic
source('~/Desktop/plot_host_trop.R')
tests
tests$ttest
tests
source('~/Desktop/plot_host_trop.R')
tests
print(tests)
tests$chain.id
tests$time
tests$ttest
source('~/Desktop/plot_host_trop.R')
tests
tests$time
source('~/Desktop/plot_host_trop.R')
tests
tests$mean
source('~/Desktop/plot_host_trop.R')
tests$mean
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
tests = df %>% group_by(chain.id, time) %>% summarise_each(ttest = funs(t.test(.[chain.id == 'selected'], .[chain.id == 'unselected'])$p.value))
tests = df %>% group_by(chain.id, time) %>% summarise_each(funs(t.test(.[chain.id == 'selected'], .[chain.id == 'unselected'])$p.value))
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
df
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
test
test
tests
source('~/Desktop/plot_host_trop.R')
df[is.na(df)]
source('~/Desktop/plot_host_trop.R')
df
df$binding
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
tests
source('~/Desktop/plot_host_trop.R')
tests$ttest
source('~/Desktop/plot_host_trop.R')
plot(1:length(tests$ttest), ttest, ylim=c(0,1))
plot(1:length(tests$ttest), tests$ttest, ylim=c(0,1))
source('~/Desktop/plot_host_trop.R')
plot(1:length(tests$ttest), tests$ttest, ylim=c(0,1))
df %>% group_by(time)
a <- df %>% group_by(time)
a$binding
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
df$binding[time == 1000 & chain.id == 'selected']
df$binding[time == 1000 & chain.id == 'selected']
df
df$binding[df$time == 1000 & df$chain.id == 'selected']
t.test(df$binding[df$time == 1000 & df$chain.id == 'selected'], df$binding[df$time == 1000 & df$chain.id == 'unselected'])
tests$ttest[1000]
tests$ttest[1001]
t.test(df$binding[df$time == 1001 & df$chain.id == 'selected'], df$binding[df$time == 1001 & df$chain.id == 'unselected'])
t.test(df$binding[df$time == 1001 & df$chain.id == 'selected'])
t.test(df$binding[df$time == 1001 & df$chain.id == 'unselected'])
t.test(df$binding[df$time == 1001 & df$chain.id == 'selected'])
t.test(df$binding[df$time == 1001 & df$chain.id == 'selected'], df$binding[df$time == 1 & df$chain.id == 'selected'])
t.test(df$binding[df$time == 1001 & df$chain.id == 'unselected'], df$binding[df$time == 1 & df$chain.id == 'unselected'])
source('~/Desktop/plot_host_trop.R')
df$binding[df$chain.id == 'selected']
df$binding[df$chain.id == 'selected'] < 10
df$binding[df$chain.id == 'selected'] > -10
df$id[df$binding[df$chain.id == 'selected'] > -10]
df$binding[df$id==34]
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
plot(1:length(tests$ttest), tests$ttest)
plot(tests$time, tests$ttest)
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
p2 <- ggplot(tests, aes(x=time, y=ttest)) + geom_point() + geom_smooth(method = 'loess')
tests <- df %>% group_by(time) %>% summarise(ttest = t.test(binding[chain.id == 'selected'], binding[chain.id == 'unselected'])$p.value)
p2 <- ggplot(tests, aes(x=time, y=ttest)) + geom_point() + geom_smooth(method = 'loess')
show(p2)
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
tests$ttest
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
p2 <- ggplot(tests, aes(x=time, y=one.sample.one)) + geom_point() + geom_smooth()
show(p2)
p2 <- ggplot(tests, aes(x=time, y=one.sample.both)) + geom_point() + geom_smooth()
show(p2)
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
rm(list = ls())
setwd('~/Desktop/')
library(ggplot2)
library(cowplot)
library(dplyr)
get.data.selected <- function(where) {
id <- c()
binding.s <- c()
binding.u <- c()
selected.chain <- c()
time <- c()
print(length(list.files(where)))
for(i in list.files(where)) {
tmp.data <- read.table(paste(where, i, sep=''), head=T)
selected.chain <- append(selected.chain, rep(tmp.data$selected_chain[dim(tmp.data)[1]], dim(tmp.data)[1]))
id <- append(id, rep(as.numeric(substr(i, 1, nchar(i) - 4)), dim(tmp.data)[1]))
selected.name <- paste('binding_complex', tmp.data$selected_chain[dim(tmp.data)[1]], sep='')
binding.s <- append(binding.s, tmp.data[[selected.name]])
unselected.name <- paste('binding_complex', 1 - selected.chain[1], sep='')
binding.u <- append(binding.u, tmp.data[[unselected.name]])
time <- append(time, tmp.data$count)
}
tmp.df <- data.frame(time = c(time, time),
id = c(id, id),
chain.id = c(rep('selected', length(id)), rep('unselected', length(id))),
selected.chain = c(selected.chain, selected.chain),
binding = c(binding.s, binding.u))
return(tmp.df[tmp.df$time <= 1000])
}
get.data.notselected <- function(where) {
id <- c()
binding <- c()
selected.chain <- c()
time <- c()
print(length(list.files(where)))
for(i in list.files(where)) {
tmp.data <- read.table(paste(where, i, sep=''), head=T)
binding <- append(binding, c(tmp.data$binding_complex0, tmp.data$binding_complex1))
id <- append(id, rep(as.numeric(substr(i, 1, nchar(i) - 4)), dim(tmp.data)[1]*2))
time <- append(time, c(tmp.data$count, tmp.data$count))
}
tmp.df <- data.frame(time = time,
id = id,
binding = binding)
return(tmp.df[tmp.df$time <= 1000])
}
df.one.r1 <- get.data.selected('~/Desktop/evolved_data/one_r1_data/')
df.one.r10 <- get.data.selected('~/Desktop/evolved_data/one_r10_data/')
df.one.r100 <- get.data.selected('~/Desktop/evolved_data/one_r100_data/')
df.both.r1 <- get.data.notselected('~/Desktop/evolved_data/both_r1_data/')
df.both.r10 <- get.data.notselected('~/Desktop/evolved_data/both_r10_data/')
df.both.r100 <- get.data.notselected('~/Desktop/evolved_data/both_r100_data/')
df.one.r1 <- get.data.selected('~/Desktop/evolved_data/one_r1_data/')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
getwd()
setwd('evolved_data/')
list.files('both_r10_data/')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
tests <- df %>% group_by(time) %>% summarise(two.sample = t.test(binding[id == 'r1'], binding[id == 'r100'])$p.value, one.sample.one = t.test(binding[id == 'r1'])$p.value, one.sample.both = t.test(binding[id == 'r100'])$p.value)
p2 <- ggplot(tests, aes(x=time, y=two.sample)) + geom_point() + geom_smooth(size=1.2, se=T, method='loess') + ylab('P-value') + xlab('Time (mutations attempted)')
show(p2)
show(p1)
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
show(p2)
source('~/Desktop/plot_host_trop.R')
ggsave(p2, file='~/Desktop/p_value_r1.pdf', height = 6, width = 6.5, useDingbats=F)
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
source('~/Desktop/plot_host_trop.R')
getwd)
getwd()
getwd()
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot.R')
r.value.9
r.value.10
r.value.11
r.value.3
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_internal_barplot.R')
r.value.3
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot.R')
r.value.3
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_internal_barplot.R')
r.value.3
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot.R')
r.value.3
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot_slac_all.R')
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot_slac_all.R')
d$SLAC.dN.All
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot_slac_all.R')
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot_slac_internal.R')
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot_slac_internal.R')
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot_slac_tips.R')
r.value.2
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot_slac_internal.R')
r.value.2
source('~/Google Drive/Data/influenza_HA_evolution/figures/rsquared_barplot_slac_all.R')
r.value.2
install.packages('snpMatrix')
library(snpMatrix)
source('~/Desktop/random_sample.R')
source('~/Desktop/random_sample.R')
source('~/Desktop/random_sample.R')
source('~/Desktop/random_sample.R')
source('~/Desktop/random_sample.R')
source('~/Desktop/random_sample.R')
source('~/Desktop/random_sample.R')
AIC(initial.fit.1)
AIC(initial.fit.3)
AIC(initial.fit.4)
BIC(initial.fit.1)
BIC(initial.fit.3)
test <- df
test$Bush.99[test$Bush.99 != '-'] <- 'A'
test$Bush.99
fit <- lm(test$FEL.dN.dS ~ test$Bush.99)
summary(fit)
AIC(fit)
AIC(initial.fit.2)
initial.fit.test <- lm(df$FEL.dN.dS ~ df$RSA.Multimer + I(1/df$distance.to.224.all) + test$Bush.99)
AIC(initial.fit.3)
AIC(initial.fit.test)
BIC(initial.fit.3)
BIC(initial.fit.test)
summary(initial.fit.1)
plot(initial.fit.1)
initial.fit.1$residuals
plot(initial.fit.1$residuals, initial.fit.3$residuals)
plot(initial.fit.1$residuals, initial.fit.3$residuals, ylim=c(-2, 2), xlim=c(-2,2))
abline(0,1)
plot(initial.fit.1$residuals^2, initial.fit.3$residuals^2, ylim=c(-2, 2), xlim=c(-2,2))
abline(0,1)
p <- ggplot(data.frame(x=initial.fit.1$residuals^2, y=initial.fit.3$residuals^2, cats=df$Bush.99), aes(x=x, y=y, col=cats)) + geom_point()
show(p)
p <- ggplot(data.frame(x=initial.fit.1$residuals^2, y=initial.fit.3$residuals^2, cats=df$Bush.99), aes(x=x, y=y, col=cats)) + geom_point(size=4)
show(p)
p <- ggplot(data.frame(x=initial.fit.1$residuals^2, y=initial.fit.3$residuals^2, cats=df$Bush.99), aes(x=x, y=y, col=cats)) + geom_point(size=4) + geom_abline(0,1)
p <- ggplot(data.frame(x=initial.fit.1$residuals^2, y=initial.fit.3$residuals^2, cats=df$Bush.99), aes(x=x, y=y, col=cats)) + geom_point(size=4) + geom_abline(intercept=0, slope=1)
p <- ggplot(data.frame(x=initial.fit.1$residuals^2, y=initial.fit.3$residuals^2, cats=df$Bush.99), aes(x=x, y=y, col=cats)) + geom_point(size=4) + geom_abline(0,1)
p <- ggplot(data.frame(x=initial.fit.1$residuals^2, y=initial.fit.3$residuals^2, cats=df$Bush.99), aes(x=x, y=y, col=cats)) + geom_point(size=4) + geom_abline(intercept=0, slope=1)
show(p)
getwd()
as.character(c
)
as.character(c
a <- as.character(c
substring(a, seq(1,nchar(x),1))
substring(a, seq(1,nchar(a),1))
substring(a, seq(1,nchar(a),1), seq(2,nchar(a),1))
substring(a, seq(1,nchar(a)-1,1), seq(2,nchar(a),1))
substring(a, 1
)
substring(a, 1, 2)
substring(a, 1, 1)
substring(a, seq(1,nchar(a),1), seq(1,nchar(a),1))
b<-substring(a, seq(1,nchar(a),1), seq(1,nchar(a),1))
a==paste(b, sep='')
paste(b, sep='')
paste(b, sep='', collapse = T)
paste(b, sep='', collapse = "")
a==paste(b, sep='', collapse='')
which(b!=1)
which(b!=0)
length(which(b!=0))
a <- c
b<-substring(a, seq(1,nchar(a),1), seq(1,nchar(a),1))
a==paste(b, sep='', collapse='')
which(b!=0)
c('00000000000000000000000000000000000000000000')
nchar(c('00000000000000000000000000000000000000000000'))
nchar(a)
nchar('00000000000000000000000000000000000000000000')
nchar('00000000000000000000000000000000000000000000')
nchar('00000000000000000000000000000000000000000000')
nchar('00000000000000000000000000000000000000000000')
nchar(c('00000000000000000000000000000000000000000000'))
require(boot)
?boot.ci
ratio <- function(d, w) sum(d$x * w)/sum(d$u * w)
city.boot <- boot(city, ratio, R = 999, stype = "w", sim = "ordinary")
boot.ci(city.boot, conf = c(0.99),
type = c("BCa"))
boot.ci(city.boot, conf = c(0.99),
type = c("bca"))
getwd()
dat <- read.table('ISA_data.csv', sep=';', header=T)
View(dat)
dat[2]
dat[,1]
dat <- read.table('ISA_data.csv', sep=';', header=T, stringsAsFactors = F)
dat[,1]
dat[1,]
install.packages("adabag")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(adabag)
r.skew <- skew.rnorm(10000, mean = 10, skewness = -0.5)
library(espresso)
library(adabag)
r.skew <- skew.rnorm(10000, mean = 10, skewness = -0.5)
install.packages("adabag")
install.packages("adabag")
library(slidify)
publish(user='ausmeyer', repo='intro-biostats-epi')
publish(user='ausmeyer', repo='intro-biostats-epi')
publish(user='ausmeyer', repo='intro-biostats-epi')
?publish
publish
publish_deck
publish_github
library(slidify)
publish(user='ausmeyer', repo='intro-biostats-epi')
setwd('~/Sandbox/')
setwd('~/Sandbox/usmledeck/')
library(slidify)
publish(user='ausmeyer', repo='intro-biostats-epi')
